name: Cross-Platform Secure CI/CD Pipeline for Containerized Applications

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: windows-latest  # Set to run only on Windows
    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Ensure Docker is running
      - name: Ensure Docker is running
        run: |
          docker --version
          docker info

      # Step 4: Set up Windows environment (optional for specific steps)
      - name: Set up environment for Windows
        run: |
          echo "Setting up Windows environment"

      # Step 5: Build Docker Image for Windows-specific Testing
      - name: Build Docker Image
        run: |
          docker buildx build -t my-app:windows --platform windows/amd64 -f Dockerfile . --push  # Make sure Dockerfile is in the root

      # Step 6: Save Docker Image as Artifact (if not using --push, use --load)
      - name: Save Docker Image
        uses: actions/upload-artifact@v3
        with:
          name: my-app-windows
          path: ./my-app:windows

  security:
    runs-on: windows-latest  # Set to run only on Windows
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Dependency Scanning
      - name: Run Dependency Scanning
        run: |
          npm install -g retire
          retire

      # Dynamic Application Security Testing (DAST)
      - name: Run OWASP ZAP
        uses: jupiter/zap-scanner-action@v1.0.4
        with:
          target: 'http://localhost:8080'

  deploy:
    runs-on: windows-latest  # Set to run only on Windows
    needs: security

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Deployment to Windows-specific platform (e.g., deploy to a Windows server, etc.)
      - name: Deploy to Windows (Custom)
        run: |
          echo "Deploying Windows application"
